akka {
  loglevel = "ERROR"
  actor.provider = cluster
  actor.warn-about-java-serializer-usage = on
  actor.allow-java-serialization = on
  coordinated-shutdown.exit-jvm = on

  actor {
    serializers {
      keys-added = "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.KeysAddedSerializer"
      key-deleted = "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.KeyDeletedSerializer"
      key-disabled = "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.KeyDisabledSerializer"
      key-enabled = "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.KeyEnabledSerializer"
      client-added = "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.ClientAddedSerializer"
      client-deleted = "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.ClientDeletedSerializer"
      relationship-added = "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.RelationshipAddedSerializer"
      relationship-removed = "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.RelationshipRemovedSerializer"
      state = "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.StateSerializer"
    }
    serialization-identifiers {
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.KeysAddedSerializer"           = 10000
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.KeyDeletedSerializer"          = 10001
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.KeyDisabledSerializer"         = 10002
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.KeyEnabledSerializer"          = 10003
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.ClientAddedSerializer"         = 10004
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.ClientDeletedSerializer"       = 10005
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.RelationshipAddedSerializer"   = 10006
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.RelationshipRemovedSerializer" = 10007
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.serializer.StateSerializer"               = 20000
      "java.io.serializable" = none
    }
    serialization-bindings {
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.KeysAdded"           = keys-added
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.KeyDeleted"          = key-deleted
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.KeyDisabled"         = key-disabled
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.KeyEnabled"          = key-enabled
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.ClientAdded"         = client-added
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.ClientDeleted"       = client-deleted
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.RelationshipAdded"   = relationship-added
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.RelationshipRemoved" = relationship-removed
      "it.pagopa.pdnd.interop.uservice.keymanagement.model.persistence.State"               = state
    }
  }


  cluster {
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    sharding {
      number-of-shards = 60 //number of nodes * 10
    }
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  typed {
    stash-capacity = 200000
  }
}

akka.management {
  cluster.bootstrap {
    contact-point-discovery {
      discovery-method = kubernetes-api
      required-contact-point-nr = ${?REQUIRED_CONTACT_POINT_NR}
    }
  }
}

akka.management {
  health-checks {
    readiness-checks {
      ready = "it.pagopa.pdnd.interop.uservice.keymanagement.server.impl.HealthCheck"
    }
    liveness-checks {
      live = "it.pagopa.pdnd.interop.uservice.keymanagement.server.impl.LiveCheck"
    }
  }
}

kamon.prometheus {
  embedded-server {
    hostname = 0.0.0.0
  }
}

kamon.instrumentation.akka.http {
  server {
    propagation {
      enabled = yes
      channel = default
    }
  }

  client {
    propagation {
      enabled = yes
      channel = default
    }
  }
}

kamon.instrumentation.akka.http {
  server.metrics {
    enabled = yes
  }
}

kamon.instrumentation.akka.http {
  server {
    tracing {
      enabled = yes
      span-metrics = on
    }
  }

  client {
    tracing {
      enabled = yes
      span-metrics = on
    }
  }
}

pdnd-interop-uservice-key-management {
  idle-timeout = 60 seconds
  number-of-events-before-snapshot = 1000
  persistence = "memory"
}
